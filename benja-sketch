let player, floor, paredIzq, paredDer, paredArr;
let obst, obst2, obst3, obst4, obst5, obst6, area;
let x,y;

function setup() {
	createCanvas(600, 600);
	area = new Sprite(50, 550, 80, 80);
    area.color = '#8AFF88'
    player = new Sprite(51, 550, 20, 20);
    player.color = 'red';
    player.overlaps(area);
    floor = new Sprite(400, 600, 800, 20);
    floor.collider = 'static';
    floor.color = 'white';
	paredIzq = new Sprite(0, 300, 20, 600);
    paredIzq.collider = 'static';
    paredIzq.color = 'white';
	paredDer = new Sprite(600, 300, 20, 600);
    paredDer.collider = 'static';
    paredDer.color = 'white';
	paredArr = new Sprite(300, 0, 600, 20);
    paredArr.collider = 'static';
    paredArr.color = 'white';
    obst = new Sprite(140, 60, 8, 200);
    obst.diameter = 20;
    obst.color = '#26f0CB';
    obst.velocity.y = 1;
    obst2 = new Sprite(220, 60, 200, 8);
    obst2.diameter = 20;
    obst2.color = '#26f0cb';
    obst2.velocity.y = 1;
    obst3 = new Sprite(300, 60, 100, 4);
    obst3.diameter = 20;
    obst3.color = '#26f0cb';
    obst3.velocity.y = 1;
    obst4 = new Sprite(570, 250, 200, 8);
    obst4.diameter = 20;
    obst4.color = '#26f0cb';
    obst4.velocity.x = -1;
    obst4.overlaps(obst);
    obst4.overlaps(obst2);
    obst4.overlaps(obst3);
    obst5 = new Sprite(570, 350, 200, 8);
    obst5.diameter = 20;
    obst5.color = '#26f0cb';
    obst5.velocity.x = -1
    obst5.overlaps(obst);
    obst5.overlaps(obst2);
    obst5.overlaps(obst3);
    obst.overlaps(obst4);
    obst6 = new Sprite(570, 140, 200, 8);
    obst6.color = '#26f0cb'
    obst6.diameter = 20;
    obst6.velocity.x = -1;
    obst6.overlaps(obst);
    obst6.overlaps(obst2);
    obst6.overlaps(obst3);
    obst6.overlaps(obst4);
    obst6.overlaps(obst5);
    coins = new Group();
    coins.diameter = 20;
    coins.color = 'gold'
    coins.overlaps(obst);
    coins.overlaps(obst2);
  coins.overlaps(obst3);
  coins.overlaps(obst4);
  coins.overlaps(obst5);
  coins.overlaps(obst6);
  coins.y = () => random(0, height);
  coins.x = () => random(0, width);
  coins.amount = 3;
  player.overlaps(coins, collect);
}

function collect(player, coins){
  coins.remove()
}
function draw() {
    clear();
	background('#AF9FF6');
    if(player.colliding(coins)){
      coins.remove();
    }
    if(obst.colliding(floor)){
      obst.velocity.y = -1
    }
  if(obst.colliding(paredArr)){
    obst.velocity.y = 1
  }
 if(obst2.colliding(floor)){
   obst2.velocity.y = -1
 }
  if(obst2.colliding(paredArr)){
    obst2.velocity.y = 1
  }
  if(obst3.colliding(floor)){
    obst3.velocity.y = -1
  }
  if(obst3.colliding(paredArr)){
    obst3.velocity.y = 1
  }
  if(obst4.colliding(paredIzq)){
    obst4.velocity.x = 1
    
  }
  if(obst4.colliding(paredDer)){
    obst4.velocity.x = -1
    
  }
  if(obst5.colliding(paredIzq)){
    obst5.velocity.x = 1
  }
  if(obst5.colliding(paredDer)){
    obst5.velocity.x = -1
  }
  if(obst6.colliding(paredIzq)){
    obst6.velocity.x = 1
  }
  if(obst6.colliding(paredDer)){
    obst6.velocity.x = -1
  }
  if(player.colliding(obst)){
    player.position.x = 51;
    player.position.y = 550;
    coins.x = () => random(0, width);
    coins.y = () => random(0, height);
  }
  if(player.colliding(obst2)){
     player.position.x = 51;
    player.position.y = 550;
       coins.x = () => random(0, width);
    coins.y = () => random(0, height);
  }
    if(player.colliding(obst3)){
     player.position.x = 51;
    player.position.y = 550;
         coins.x = () => random(0, width);
    coins.y = () => random(0, height);
    }
    if(player.colliding(obst4)){
     player.position.x = 51;
    player.position.y = 550;
         coins.x = () => random(0, width);
    coins.y = () => random(0, height);
    }
    if(player.colliding(obst5)){
    player.position.x = 51;
    player.position.y = 550;
         coins.x = () => random(0, width);
    coins.y = () => random(0, height);
    }
  if(player.colliding(obst6)){
   player.position.x = 51;
    player.position.y = 550;
       coins.x = () => random(0, width);
    coins.y = () => random(0, height);
  } 
  player.vel.x = -x;
  player.vel.y = y;
}
 window.addEventListener('devicemotion', function(e) {
  x = parseInt(e.accelerationIncludingGravity.x);
  y = parseInt(e.accelerationIncludingGravity.y);
  z = parseInt(e.accelerationIncludingGravity.z);
});
